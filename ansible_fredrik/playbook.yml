---
- name: Update
  hosts: staging
  become: true

  tasks:
    - name: Update and upgrade apt packages
      ansible.builtin.apt:
        upgrade: true
        update_cache: true
        cache_valid_time: 86400

- name: Clone repository
  hosts: staging
  become: true
  tasks:
    - name: Clone private repository
      ansible.builtin.git:
        repo: https://x-access-token:{{ lookup('env', 'GITHUB_TOKEN') }}@github.com/mindriddler/gear5.git
        dest: /home/runner/
        version: main
 
- name: Install required packages
  hosts: staging
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install prerequisites
      ansible.builtin.apt:
        name: aptitude
        state: present
      tags: [system]

    - name: Install LAMP packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - apache2
        - mysql-server
        - python3-pymysql
        - php
        - php-mysql
        - libapache2-mod-php
      tags: [system]

    - name: Install PHP Extensions
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop: "{{ php_modules }}"
      tags: [system]


    # Apache Configuration
    - name: Create document root
      ansible.builtin.file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: "www-data"
        group: "www-data"
        mode: "0755"
      tags: [apache]

    - name: Set up Apache VirtualHost
      ansible.builtin.template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
      notify: Reload Apache
      tags: [apache]

    - name: Enable rewrite module
      ansible.builtin.shell: /usr/sbin/a2enmod rewrite
      notify: Reload Apache
      tags: [apache]

    - name: Enable new site
      ansible.builtin.shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache
      tags: [apache]

    - name: Disable default Apache site
      ansible.builtin.shell: /usr/sbin/a2dissite 000-default.conf
      notify: Restart Apache
      tags: [apache]

    # MySQL Configuration
    - name: Set the root password
      community.mysql.mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
      tags: [mysql, mysql-root]

    - name: Remove all anonymous user accounts
      community.mysql.mysql_user:
        name: ""
        host_all: true
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [mysql]

    - name: Remove the MySQL test database
      community.mysql.mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [mysql]

    - name: Creates database for WordPress
      community.mysql.mysql_db:
        name: "{{ mysql_db }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [mysql]

    - name: Create MySQL user for WordPress
      community.mysql.mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: "{{ mysql_db }}.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [mysql]

    # WordPress Configuration
    - name: Download and unpack latest WordPress
      ansible.builtin.unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/{{ http_host }}"
        remote_src: true
        creates: "/var/www/{{ http_host }}/wordpress"
      tags: [wordpress]

    - name: Set ownership
      ansible.builtin.file:
        path: "/var/www/{{ http_host }}"
        state: directory
        recurse: true
        owner: www-data
        group: www-data
      tags: [wordpress]

    - name: Set permissions for directories
      ansible.builtin.shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
      tags: [wordpress]

    - name: Set permissions for files
      ansible.builtin.shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
      tags: [wordpress]

    - name: Set up wp-config
      ansible.builtin.template:
        src: "files/wp-config.php.j2"
        dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
      tags: [wordpress]

    - name: Add Google Cloud SDK apt key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Google Cloud SDK apt repository
      ansible.builtin.apt_repository:
        repo: "deb http://packages.cloud.google.com/apt cloud-sdk main"
        state: present

    - name: Update apt and install Google Cloud SDK
      ansible.builtin.apt:
        name: google-cloud-sdk

  handlers:
    - name: Reload Apache
      ansible.builtin.service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      ansible.builtin.service:
        name: apache2
        state: restarted
